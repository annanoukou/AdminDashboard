{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anna\\\\Documents\\\\projects\\\\shipment-dashboard\\\\client\\\\src\\\\screens\\\\AdminDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [subscribers, setSubscribers] = useState([]);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState(''); // 'success' or 'error'\n\n  useEffect(() => {\n    // Fetch the list of subscribers when the component mounts\n    const fetchSubscribers = async () => {\n      try {\n        const response = await fetch('http://localhost:4000/api/subscribers');\n        if (response.ok) {\n          const data = await response.json();\n          setSubscribers(data); // Store the subscribers data in the state\n        } else {\n          setMessage('Failed to load subscribers');\n          setMessageType('error');\n        }\n      } catch (error) {\n        setMessage('An error occurred while fetching subscribers');\n        setMessageType('error');\n      }\n    };\n    fetchSubscribers();\n  }, []);\n  const handleRemoveSubscriber = async email => {\n    // Call the backend to remove the subscriber\n    try {\n      const response = await fetch('http://localhost:4000/api/subscribers/delete', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (response.ok) {\n        setMessage('Subscriber removed successfully');\n        setMessageType('success');\n        setSubscribers(subscribers.filter(subscriber => subscriber.email !== email)); // Update the UI by removing the subscriber\n      } else {\n        setMessage('Failed to remove subscriber');\n        setMessageType('error');\n      }\n    } catch (error) {\n      setMessage('An error occurred while removing the subscriber');\n      setMessageType('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-8 rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `mt-4 text-center ${messageType === 'success' ? 'text-green-600' : 'text-red-600'}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mt-6 mb-4\",\n      children: \"Subscribers Waiting to List Their Companies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: subscribers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No subscribers found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : subscribers.map(subscriber => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center border-b pb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg font-medium\",\n            children: subscriber.merge_fields.COMPANY\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: subscriber.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveSubscriber(subscriber.email),\n          className: \"bg-red-600 text-white py-2 px-4 rounded-lg shadow-md hover:bg-red-700 transition\",\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)]\n      }, subscriber.email, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"jsjXQyOV8k2LFPKGPCm1vL4w/TI=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AdminDashboard","_s","subscribers","setSubscribers","message","setMessage","messageType","setMessageType","fetchSubscribers","response","fetch","ok","data","json","error","handleRemoveSubscriber","email","method","headers","body","JSON","stringify","filter","subscriber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","merge_fields","COMPANY","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Anna/Documents/projects/shipment-dashboard/client/src/screens/AdminDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst AdminDashboard = () => {\r\n  const [subscribers, setSubscribers] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState(''); // 'success' or 'error'\r\n\r\n  useEffect(() => {\r\n    // Fetch the list of subscribers when the component mounts\r\n    const fetchSubscribers = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:4000/api/subscribers');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setSubscribers(data); // Store the subscribers data in the state\r\n        } else {\r\n          setMessage('Failed to load subscribers');\r\n          setMessageType('error');\r\n        }\r\n      } catch (error) {\r\n        setMessage('An error occurred while fetching subscribers');\r\n        setMessageType('error');\r\n      }\r\n    };\r\n\r\n    fetchSubscribers();\r\n  }, []);\r\n\r\n  const handleRemoveSubscriber = async (email) => {\r\n    // Call the backend to remove the subscriber\r\n    try {\r\n      const response = await fetch('http://localhost:4000/api/subscribers/delete', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setMessage('Subscriber removed successfully');\r\n        setMessageType('success');\r\n        setSubscribers(subscribers.filter((subscriber) => subscriber.email !== email)); // Update the UI by removing the subscriber\r\n      } else {\r\n        setMessage('Failed to remove subscriber');\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      setMessage('An error occurred while removing the subscriber');\r\n      setMessageType('error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-8 rounded-lg shadow-lg\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Admin Dashboard</h1>\r\n\r\n      {/* Display success or error message */}\r\n      {message && (\r\n        <p\r\n          className={`mt-4 text-center ${\r\n            messageType === 'success' ? 'text-green-600' : 'text-red-600'\r\n          }`}\r\n        >\r\n          {message}\r\n        </p>\r\n      )}\r\n\r\n      <h2 className=\"text-xl font-semibold mt-6 mb-4\">Subscribers Waiting to List Their Companies</h2>\r\n      \r\n      {/* Display the list of subscribers */}\r\n      <div className=\"space-y-4\">\r\n        {subscribers.length === 0 ? (\r\n          <p>No subscribers found.</p>\r\n        ) : (\r\n          subscribers.map((subscriber) => (\r\n            <div key={subscriber.email} className=\"flex justify-between items-center border-b pb-4\">\r\n              <div>\r\n                <p className=\"text-lg font-medium\">{subscriber.merge_fields.COMPANY}</p>\r\n                <p className=\"text-sm text-gray-600\">{subscriber.email}</p>\r\n              </div>\r\n              <button\r\n                onClick={() => handleRemoveSubscriber(subscriber.email)}\r\n                className=\"bg-red-600 text-white py-2 px-4 rounded-lg shadow-md hover:bg-red-700 transition\"\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}