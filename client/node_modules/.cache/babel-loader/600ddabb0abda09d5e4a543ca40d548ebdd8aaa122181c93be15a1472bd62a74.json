{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anna\\\\Documents\\\\projects\\\\shipment-dashboard\\\\client\\\\src\\\\components\\\\SubscribersList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useData } from '../context/DataContext'; // Import custom hook to access context data\nimport { HiMenu } from 'react-icons/hi'; // Import a hamburger icon from react-icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubscribersList = () => {\n  _s();\n  const {\n    subscribers,\n    setSubscribers\n  } = useData(); // Get companies, shipments, and subscribers from context\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false); // Handle sidebar state\n\n  const handleRemoveSubscriber = async email => {\n    try {\n      const response = await fetch('http://localhost:4000/api/subscribers/delete', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (response.ok) {\n        setMessage('Subscriber removed successfully');\n        setMessageType('success');\n\n        // Update the list without refreshing\n        setSubscribers(prevSubscribers => prevSubscribers.filter(subscriber => subscriber.email_address !== email));\n      } else {\n        setMessage('Failed to remove subscriber');\n        setMessageType('error');\n      }\n    } catch (error) {\n      setMessage('An error occurred while removing the subscriber');\n      setMessageType('error');\n    } finally {\n      // Clear message after 3 seconds\n      setTimeout(() => {\n        setMessage('');\n        setMessageType('');\n      }, 3000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex bg-gray-100 md:ml-64\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"md:hidden absolute top-4 left-4 z-50 bg-blue-600 text-white p-3 rounded-full shadow-lg hover:bg-blue-700 transition-colors\",\n      onClick: () => setIsSidebarOpen(!isSidebarOpen) // Toggle sidebar open state\n      ,\n      children: [/*#__PURE__*/_jsxDEV(HiMenu, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex-1 p-8 transition-all`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mt-6 mb-4\",\n        children: \"Subscribers Waiting to List Their Companies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `mb-4  ${messageType === 'success' ? 'text-green-600' : 'text-red-600'}`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: subscribers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No subscribers found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this) : subscribers.filter(subscriber => subscriber.status === 'subscribed').map((subscriber, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg shadow-md flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: subscriber.email_address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveSubscriber(subscriber.email_address),\n            className: \"bg-red-500 text-white px-4 py-2 rounded\",\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(SubscribersList, \"5csjFb5dDyRKO9dOuUQhxtXgdEA=\", false, function () {\n  return [useData];\n});\n_c = SubscribersList;\nexport default SubscribersList;\nvar _c;\n$RefreshReg$(_c, \"SubscribersList\");","map":{"version":3,"names":["React","useState","useData","HiMenu","jsxDEV","_jsxDEV","SubscribersList","_s","subscribers","setSubscribers","message","setMessage","messageType","setMessageType","isSidebarOpen","setIsSidebarOpen","handleRemoveSubscriber","email","response","fetch","method","credentials","headers","body","JSON","stringify","ok","prevSubscribers","filter","subscriber","email_address","error","setTimeout","className","children","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","length","status","map","i","_c","$RefreshReg$"],"sources":["C:/Users/Anna/Documents/projects/shipment-dashboard/client/src/components/SubscribersList.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useData } from '../context/DataContext'; // Import custom hook to access context data\r\nimport { HiMenu } from 'react-icons/hi'; // Import a hamburger icon from react-icons\r\n\r\nconst SubscribersList = () => {\r\n  const { subscribers, setSubscribers } = useData(); // Get companies, shipments, and subscribers from context\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false); // Handle sidebar state\r\n\r\n  const handleRemoveSubscriber = async (email) => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/api/subscribers/delete', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setMessage('Subscriber removed successfully');\r\n        setMessageType('success');\r\n\r\n        // Update the list without refreshing\r\n        setSubscribers((prevSubscribers) =>\r\n          prevSubscribers.filter((subscriber) => subscriber.email_address !== email)\r\n        );\r\n      } else {\r\n        setMessage('Failed to remove subscriber');\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      setMessage('An error occurred while removing the subscriber');\r\n      setMessageType('error');\r\n    } finally {\r\n      // Clear message after 3 seconds\r\n      setTimeout(() => {\r\n        setMessage('');\r\n        setMessageType('');\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex bg-gray-100 md:ml-64\">\r\n      {/* Sidebar Toggle Button */}\r\n      <button\r\n        className=\"md:hidden absolute top-4 left-4 z-50 bg-blue-600 text-white p-3 rounded-full shadow-lg hover:bg-blue-700 transition-colors\"\r\n        onClick={() => setIsSidebarOpen(!isSidebarOpen)} // Toggle sidebar open state\r\n      >\r\n        <HiMenu size={24} /> {/* Hamburger icon */}\r\n      </button>\r\n\r\n      {/* Main Content */}\r\n      <div className={`flex-1 p-8 transition-all`}>\r\n        <h2 className=\"text-xl font-semibold mt-6 mb-4\">\r\n          Subscribers Waiting to List Their Companies\r\n        </h2>\r\n        {message && (\r\n          <p\r\n            className={`mb-4  ${messageType === 'success' ? 'text-green-600' : 'text-red-600'}`}\r\n          >\r\n            {message}\r\n          </p>\r\n        )}\r\n        <div className=\"space-y-4\">\r\n          {subscribers.length === 0 ? (\r\n            <p>No subscribers found.</p>\r\n          ) : (\r\n            subscribers\r\n              .filter((subscriber) => subscriber.status === 'subscribed')\r\n              .map((subscriber, i) => (\r\n                <div\r\n                  key={i}\r\n                  className=\"bg-white p-4 rounded-lg shadow-md flex items-center justify-between\"\r\n                >\r\n                  <p>{subscriber.email_address}</p>\r\n                  <button\r\n                    onClick={() => handleRemoveSubscriber(subscriber.email_address)}\r\n                    className=\"bg-red-500 text-white px-4 py-2 rounded\"\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                </div>\r\n              ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubscribersList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}