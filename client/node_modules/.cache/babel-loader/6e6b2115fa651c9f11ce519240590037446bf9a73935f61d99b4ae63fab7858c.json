{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anna\\\\Documents\\\\projects\\\\shipment-dashboard\\\\client\\\\src\\\\context\\\\DataContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/DataContext.js\n\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\nexport const useData = () => {\n  _s();\n  return useContext(DataContext);\n};\n_s(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const DataProvider = ({\n  children\n}) => {\n  _s2();\n  const [companies, setCompanies] = useState([]);\n  const [shipments, setShipments] = useState([]);\n  const [shipmentDetails, setShipmentDetails] = useState([]);\n  const [subscribers, setSubscribers] = useState([]);\n  useEffect(() => {\n    const loadData = async () => {\n      const companiesResponse = await fetch('/data/companies.json');\n      const shipmentsResponse = await fetch('/data/shipments.json');\n      const details1Response = await fetch('/data/shipments_details_1.json');\n      const details2Response = await fetch('/data/shipments_details_2.json');\n      const companiesData = await companiesResponse.json();\n      const shipmentsData = await shipmentsResponse.json();\n      const details1Data = await details1Response.json();\n      const details2Data = await details2Response.json();\n      setCompanies(companiesData);\n      setShipments(shipmentsData);\n      const allDetails = [...details1Data, ...details2Data];\n      setShipmentDetails(allDetails);\n    };\n    loadData();\n  }, []);\n  useEffect(() => {\n    // Fetch the subscribers from the backend API\n    const fetchSubscribers = async () => {\n      try {\n        const response = await fetch('http://localhost:4000/api/subscribers');\n        if (response.ok) {\n          const data = await response.json();\n          setSubscribers(data);\n        }\n      } catch (error) {\n        console.error('Error fetching subscribers', error);\n      }\n    };\n    fetchSubscribers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      companies,\n      shipments,\n      shipmentDetails,\n      subscribers,\n      setSubscribers,\n      setCompanies,\n      setShipments,\n      setShipmentDetails\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s2(DataProvider, \"WlDbIF0I5aKGASO4wpL9inrnaxQ=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","DataContext","useData","_s","DataProvider","children","_s2","companies","setCompanies","shipments","setShipments","shipmentDetails","setShipmentDetails","subscribers","setSubscribers","loadData","companiesResponse","fetch","shipmentsResponse","details1Response","details2Response","companiesData","json","shipmentsData","details1Data","details2Data","allDetails","fetchSubscribers","response","ok","data","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Anna/Documents/projects/shipment-dashboard/client/src/context/DataContext.js"],"sourcesContent":["// src/context/DataContext.js\r\n\r\nimport React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\nconst DataContext = createContext();\r\n\r\nexport const useData = () => useContext(DataContext);\r\n\r\nexport const DataProvider = ({ children }) => {\r\n  const [companies, setCompanies] = useState([]);\r\n  const [shipments, setShipments] = useState([]);\r\n  const [shipmentDetails, setShipmentDetails] = useState([]);\r\n  const [subscribers, setSubscribers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      const companiesResponse = await fetch('/data/companies.json');\r\n      const shipmentsResponse = await fetch('/data/shipments.json');\r\n      const details1Response = await fetch('/data/shipments_details_1.json');\r\n      const details2Response = await fetch('/data/shipments_details_2.json');\r\n\r\n      const companiesData = await companiesResponse.json();\r\n      const shipmentsData = await shipmentsResponse.json();\r\n      const details1Data = await details1Response.json();\r\n      const details2Data = await details2Response.json();\r\n\r\n      setCompanies(companiesData);\r\n      setShipments(shipmentsData);\r\n\r\n      const allDetails = [...details1Data, ...details2Data];\r\n      setShipmentDetails(allDetails);\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch the subscribers from the backend API\r\n    const fetchSubscribers = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:4000/api/subscribers');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setSubscribers(data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching subscribers', error);\r\n      }\r\n    };\r\n\r\n    fetchSubscribers();\r\n  }, []);\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        companies,\r\n        shipments,\r\n        shipmentDetails,\r\n        subscribers,\r\n        setSubscribers,\r\n        setCompanies,\r\n        setShipments,\r\n        setShipmentDetails,\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMkB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,iBAAiB,GAAG,MAAMC,KAAK,CAAC,sBAAsB,CAAC;MAC7D,MAAMC,iBAAiB,GAAG,MAAMD,KAAK,CAAC,sBAAsB,CAAC;MAC7D,MAAME,gBAAgB,GAAG,MAAMF,KAAK,CAAC,gCAAgC,CAAC;MACtE,MAAMG,gBAAgB,GAAG,MAAMH,KAAK,CAAC,gCAAgC,CAAC;MAEtE,MAAMI,aAAa,GAAG,MAAML,iBAAiB,CAACM,IAAI,CAAC,CAAC;MACpD,MAAMC,aAAa,GAAG,MAAML,iBAAiB,CAACI,IAAI,CAAC,CAAC;MACpD,MAAME,YAAY,GAAG,MAAML,gBAAgB,CAACG,IAAI,CAAC,CAAC;MAClD,MAAMG,YAAY,GAAG,MAAML,gBAAgB,CAACE,IAAI,CAAC,CAAC;MAElDd,YAAY,CAACa,aAAa,CAAC;MAC3BX,YAAY,CAACa,aAAa,CAAC;MAE3B,MAAMG,UAAU,GAAG,CAAC,GAAGF,YAAY,EAAE,GAAGC,YAAY,CAAC;MACrDb,kBAAkB,CAACc,UAAU,CAAC;IAChC,CAAC;IAEDX,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAENlB,SAAS,CAAC,MAAM;IACd;IACA,MAAM8B,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAAC,uCAAuC,CAAC;QACrE,IAAIW,QAAQ,CAACC,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACN,IAAI,CAAC,CAAC;UAClCR,cAAc,CAACgB,IAAI,CAAC;QACtB;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDJ,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE3B,OAAA,CAACC,WAAW,CAACgC,QAAQ;IACnBC,KAAK,EAAE;MACL3B,SAAS;MACTE,SAAS;MACTE,eAAe;MACfE,WAAW;MACXC,cAAc;MACdN,YAAY;MACZE,YAAY;MACZE;IACF,CAAE;IAAAP,QAAA,EAEDA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChC,GAAA,CA7DWF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}