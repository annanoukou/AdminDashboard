{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anna\\\\Documents\\\\projects\\\\shipment-dashboard\\\\client\\\\src\\\\components\\\\SubscribersList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useData } from '../context/DataContext'; // Import custom hook to access context data\nimport SubscriberItem from './SubscriberItem'; // Subscriber item component\nimport Message from './Message'; // Message component for success/error feedback\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubscribersList = () => {\n  _s();\n  const {\n    subscribers,\n    setSubscribers\n  } = useData(); // Get subscribers from context\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n\n  // Handle removing a subscriber\n  const handleRemoveSubscriber = async email => {\n    try {\n      const response = await fetch('http://localhost:4000/api/subscribers/delete', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (response.ok) {\n        setMessage('Subscriber removed successfully');\n        setMessageType('success');\n        // Update subscribers list without refreshing\n        setSubscribers(prevSubscribers => prevSubscribers.filter(subscriber => subscriber.email_address !== email));\n      } else {\n        setMessage('Failed to remove subscriber');\n        setMessageType('error');\n      }\n    } catch (error) {\n      setMessage('An error occurred while removing the subscriber');\n      setMessageType('error');\n    } finally {\n      // Clear message after 3 seconds\n      setTimeout(() => {\n        setMessage('');\n        setMessageType('');\n      }, 3000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex bg-gray-100 md:ml-64\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gradient-to-br from-blue-100 via-white to-blue-50 flex-1 p-8 transition-all\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mt-6 mb-4\",\n        children: \"Subscribers Waiting to List Their Companies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        message: message,\n        messageType: messageType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: subscribers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No subscribers found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this) : subscribers.filter(subscriber => subscriber.status === 'subscribed').map((subscriber, i) => /*#__PURE__*/_jsxDEV(SubscriberItem, {\n          subscriber: subscriber,\n          onRemove: () => handleRemoveSubscriber(subscriber.email_address)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(SubscribersList, \"XjoV2sPCD7WWzX5jnHb6lR2CpwA=\", false, function () {\n  return [useData];\n});\n_c = SubscribersList;\nexport default SubscribersList;\nvar _c;\n$RefreshReg$(_c, \"SubscribersList\");","map":{"version":3,"names":["React","useState","useData","SubscriberItem","Message","jsxDEV","_jsxDEV","SubscribersList","_s","subscribers","setSubscribers","message","setMessage","messageType","setMessageType","handleRemoveSubscriber","email","response","fetch","method","credentials","headers","body","JSON","stringify","ok","prevSubscribers","filter","subscriber","email_address","error","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","status","map","i","onRemove","_c","$RefreshReg$"],"sources":["C:/Users/Anna/Documents/projects/shipment-dashboard/client/src/components/SubscribersList.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useData } from '../context/DataContext'; // Import custom hook to access context data\r\nimport SubscriberItem from './SubscriberItem'; // Subscriber item component\r\nimport Message from './Message'; // Message component for success/error feedback\r\n\r\nconst SubscribersList = () => {\r\n  const { subscribers, setSubscribers } = useData(); // Get subscribers from context\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n\r\n  // Handle removing a subscriber\r\n  const handleRemoveSubscriber = async (email) => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/api/subscribers/delete', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setMessage('Subscriber removed successfully');\r\n        setMessageType('success');\r\n        // Update subscribers list without refreshing\r\n        setSubscribers((prevSubscribers) =>\r\n          prevSubscribers.filter((subscriber) => subscriber.email_address !== email)\r\n        );\r\n      } else {\r\n        setMessage('Failed to remove subscriber');\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      setMessage('An error occurred while removing the subscriber');\r\n      setMessageType('error');\r\n    } finally {\r\n      // Clear message after 3 seconds\r\n      setTimeout(() => {\r\n        setMessage('');\r\n        setMessageType('');\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex bg-gray-100 md:ml-64\">\r\n      {/* Main content area */}\r\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-100 via-white to-blue-50 flex-1 p-8 transition-all\">\r\n\r\n        <h2 className=\"text-xl font-semibold mt-6 mb-4\">\r\n          Subscribers Waiting to List Their Companies\r\n        </h2>\r\n\r\n        {/* Message component for feedback */}\r\n        {message && <Message message={message} messageType={messageType} />}\r\n\r\n        <div className=\"space-y-4\">\r\n          {/* Display a message if no subscribers are available */}\r\n          {subscribers.length === 0 ? (\r\n            <p>No subscribers found.</p>\r\n          ) : (\r\n            subscribers\r\n              .filter((subscriber) => subscriber.status === 'subscribed')\r\n              .map((subscriber, i) => (\r\n                <SubscriberItem\r\n                  key={i}\r\n                  subscriber={subscriber}\r\n                  onRemove={() => handleRemoveSubscriber(subscriber.email_address)}\r\n                />\r\n              ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubscribersList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}