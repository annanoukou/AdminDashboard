{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anna\\\\Documents\\\\projects\\\\shipment-dashboard\\\\client\\\\src\\\\components\\\\Chart.jsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Chart = ({\n  data,\n  title\n}) => {\n  if (!data || data.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 42\n  }, this);\n  const filteredData = data.filter(item => item.v !== null);\n  const labels = filteredData.map(item => new Date(item.t).toLocaleTimeString());\n  const values = filteredData.map(item => item.v);\n  const chartData = {\n    labels: labels,\n    datasets: [{\n      label: title,\n      data: values,\n      borderColor: 'rgb(75, 192, 192)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      tension: 0.4,\n      fill: true\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Time'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Value'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","data","title","length","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredData","filter","item","v","labels","map","Date","t","toLocaleTimeString","values","chartData","datasets","label","borderColor","backgroundColor","tension","fill","chartOptions","responsive","scales","x","display","text","y","className","options","_c","$RefreshReg$"],"sources":["C:/Users/Anna/Documents/projects/shipment-dashboard/client/src/components/Chart.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst Chart = ({ data, title }) => {\r\n  if (!data || data.length === 0) return <p>No data available</p>;\r\n\r\n  const filteredData = data.filter((item) => item.v !== null);\r\n  \r\n  const labels = filteredData.map((item) => new Date(item.t).toLocaleTimeString());\r\n  const values = filteredData.map((item) => item.v);\r\n\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: title,\r\n        data: values,\r\n        borderColor: 'rgb(75, 192, 192)',\r\n        backgroundColor: 'rgba(75, 192, 192, 0.2)', \r\n        tension: 0.4, \r\n        fill: true, \r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Time',\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: 'Value',\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-8\">\r\n      <h3 className=\"text-xl font-semibold mb-4\">{title}</h3>\r\n      <Line data={chartData} options={chartOptions} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3HT,OAAO,CAACU,QAAQ,CAACT,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE/F,MAAMR,KAAK,GAAGA,CAAC;EAAEY,IAAI;EAAEC;AAAM,CAAC,KAAK;EACjC,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE,oBAAOJ,OAAA;IAAAK,QAAA,EAAG;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE/D,MAAMC,YAAY,GAAGR,IAAI,CAACS,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,CAAC,KAAK,IAAI,CAAC;EAE3D,MAAMC,MAAM,GAAGJ,YAAY,CAACK,GAAG,CAAEH,IAAI,IAAK,IAAII,IAAI,CAACJ,IAAI,CAACK,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;EAChF,MAAMC,MAAM,GAAGT,YAAY,CAACK,GAAG,CAAEH,IAAI,IAAKA,IAAI,CAACC,CAAC,CAAC;EAEjD,MAAMO,SAAS,GAAG;IAChBN,MAAM,EAAEA,MAAM;IACdO,QAAQ,EAAE,CACR;MACEC,KAAK,EAAEnB,KAAK;MACZD,IAAI,EAAEiB,MAAM;MACZI,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE,yBAAyB;MAC1CC,OAAO,EAAE,GAAG;MACZC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;MACNC,CAAC,EAAE;QACD3B,KAAK,EAAE;UACL4B,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,CAAC,EAAE;QACD9B,KAAK,EAAE;UACL4B,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,oBACEhC,OAAA;IAAKkC,SAAS,EAAC,MAAM;IAAA7B,QAAA,gBACnBL,OAAA;MAAIkC,SAAS,EAAC,4BAA4B;MAAA7B,QAAA,EAAEF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvDT,OAAA,CAACX,IAAI;MAACa,IAAI,EAAEkB,SAAU;MAACe,OAAO,EAAER;IAAa;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAAC2B,EAAA,GA9CI9C,KAAK;AAgDX,eAAeA,KAAK;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}